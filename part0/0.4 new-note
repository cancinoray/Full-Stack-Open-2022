Create a similar diagram depicting the situation where the user creates a new note on page https://studies.cs.helsinki.fi/exampleapp/notes when writing something into the text field and clicking the submit button. 

----
browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/notes
server->browser: HTML-code
browser-> server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/main.css
server->browser: main.css
browser-> server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/main.js
server->browser: main.js

note over browser:
browser start executing js-code
that requests JSON data from the server
end note

browser-> server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/data.json
server->browser: [{content:"" , date: "2021-05-23"} // display the save notes in json format]

note over browser:
browser executes the event handler
that renders notes to display
end note

note over browser:
adding notes: after clicking the
save button it will make 
a request to a new_note page
end note

browser->server: HTTP POST https://studies.cs.helsinki.fi/exampleapp/new_note

note over browser:
adding new notes reloads
the the notes page
and the reload causes three
more HTTP request
end note

server->browser: HTML-code
browser-> server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/main.css
server->browser: main.css
browser-> server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/main.js
server->browser: main.js

note over browser:
browser start executing js-code
that requests JSON data from the server
end note

browser-> server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/data.json
server->browser: [{content:"" , date: "2021-05-23"} // display will include the latest save notes]

note over browser:
browser executes the event handler
that renders notes to display
end note



